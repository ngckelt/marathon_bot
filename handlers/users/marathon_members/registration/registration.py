from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from loader import dp

from states.registration.registration import RegisterMarathonMember
from keyboards.inline.wakeup_time_markup import wakeup_time_markup, wakeup_time_callback
from keyboards.inline.yes_or_no_markup import yes_or_no_markup, yes_or_no_callback
from keyboards.default.marathon_members.start_marathon import start_marathon_markup
from keyboards.default.marathon_members.registration_markups import request_contact_markup

from utils.db_api.db import MarathonMembersModel, FunnelUsersModel
from .utils import correct_msk_timedelta, only_cyrillic, notify_moderator_about_new_marathon_member

from keyboards.default.funnel_users.funnel_users_markups import restart_registration_markup
from utils.chat_link.chat_link import get_chat_link


@dp.message_handler(text="–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å–Ω–∞—á–∞–ª–∞ üîÑ", state=RegisterMarathonMember)
async def restart_registration(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer(
        text="–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é",
        reply_markup=restart_registration_markup
    )
    await RegisterMarathonMember.get_full_name.set()


@dp.message_handler(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å 5 –¥–Ω–µ–π —á–µ–ª–ª–µ–Ω–¥–∂–∞")
async def start_registration(message: types.Message):
    marathon_member = await MarathonMembersModel.get_marathon_member(message.from_user.id)
    if marathon_member is None:
        await FunnelUsersModel.update_funnel_user(
            telegram_id=message.from_user.id,
            last_message="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å 3 –¥–Ω—è —á–µ–ª–ª–µ–Ω–¥–∂–∞",
            on_marathon_registration=True
        )
        await message.answer(
            text="–û—Ç–ª–∏—á–Ω–æ! –¢—ã —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä! "
                 "–ê —Ç–µ–ø–µ—Ä—å, –¥–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? "
                 "–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é",
            reply_markup=restart_registration_markup
        )
        await RegisterMarathonMember.get_full_name.set()
    else:
        await message.answer("–¢—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É")


@dp.message_handler(state=RegisterMarathonMember.get_full_name)
async def get_full_name(message: types.Message, state: FSMContext):
    try:
        first_name, last_name = message.text.split()
        if only_cyrillic(first_name) and only_cyrillic(last_name):
            await state.update_data(first_name=first_name, last_name=last_name)
            await message.answer(
                text="–ü—Ä–∏—à–ª–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. "
                     "–û–Ω –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã —Å —Ç–æ–±–æ–π –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è –º–µ–Ω—Ç–æ—Ä —á–µ–ª–ª–µ–Ω–¥–∂–∞",
                reply_markup=request_contact_markup
            )
            await RegisterMarathonMember.get_phone.set()
        else:
            await message.answer("–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–∏—Ä–∏–ª–ª–∏—Ü—É")
    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")


@dp.message_handler(content_types=types.ContentTypes.CONTACT, state=RegisterMarathonMember.get_phone)
async def get_phone(message: types.Message, state: FSMContext):
    phone = message.contact.phone_number
    if message.contact.user_id == message.from_user.id:
        if phone[0] != '+':
            phone = '+' + phone

        await message.answer(
            text="–û—Ç–ª–∏—á–Ω–æ",
            reply_markup=restart_registration_markup
        )
        await state.update_data(phone=phone)
        await message.answer(
            text="–í—ã–±–µ—Ä–∏ –∂–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è –ø–æ–¥—ä–µ–º–∞",
            reply_markup=wakeup_time_markup()
        )

        await RegisterMarathonMember.get_wakeup_time.set()
    else:
        await message.answer("–ê–π-–∞–π-–∞–π! –ö–∞–∫ –Ω–µ—Ö–æ—Ä–æ—à–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á—É–∂–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞! üò°")


@dp.callback_query_handler(wakeup_time_callback.filter(), state=RegisterMarathonMember.get_wakeup_time)
async def get_wakeup_time(callback: types.CallbackQuery, callback_data: dict, state: FSMContext):
    await callback.answer()
    wakeup_time = callback_data.get('wakeup_time')
    await state.update_data(wakeup_time=wakeup_time)

    await callback.message.answer(
        text="–¢–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –º–æ—Å–∫–æ–≤—Å–∫–∏–º?",
        reply_markup=yes_or_no_markup('is_msk')
    )
    await RegisterMarathonMember.is_msk.set()


async def finish_registration(user_id, username, state):
    state_data = await state.get_data()
    await MarathonMembersModel.add_marathon_member(
        telegram_id=user_id,
        username=username,
        first_name=state_data.get('first_name').capitalize(),
        last_name=state_data.get('last_name').capitalize(),
        phone=state_data.get('phone'),
        msk_timedelta=state_data.get('msk_timedelta'),
        wakeup_time=state_data.get('wakeup_time')
    )
    await FunnelUsersModel.update_funnel_user(
        telegram_id=user_id,
        started_marathon=True,
        on_marathon_registration=False
    )
    await notify_moderator_about_new_marathon_member(
        first_name=state_data.get('first_name').capitalize(),
        last_name=state_data.get('last_name').capitalize(),
        username=username if username is not None else "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
        phone=state_data.get('phone')
    )


@dp.callback_query_handler(yes_or_no_callback.filter(action='is_msk'), state=RegisterMarathonMember.is_msk)
async def is_msk(callback: types.CallbackQuery, callback_data: dict, state: FSMContext):
    await callback.answer()
    choice = callback_data.get('choice')
    if choice == 'yes':
        await state.update_data(msk_timedelta='0')
        await finish_registration(callback.from_user.id, callback.from_user.username, state)
        text = f"–í –±–ª–∏–∂–∞–π—à–∏–µ —Å—É—Ç–∫–∏ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω—Ç–æ—Ä —á–µ–ª–ª–µ–Ω–¥–∂–∞ –∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –∫–∞–∫ —É –Ω–∞—Å –≤—Å—ë —É—Å—Ç—Ä–æ–µ–Ω–æ. " \
               f"<b>–ö–æ—É—á-–±–µ—Å–µ–¥–∞ (10 –º–∏–Ω—É—Ç) —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏–µ–º –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º</b>, —á—Ç–æ–±—ã –ø—Ä–∏–≤—ã—á–∫–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∞—Å—å " \
               f"–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ —É—Å–ø–µ—à–Ω–æ. <b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–Ω–∏–º–∏ —Ç—Ä—É–±–∫—É - –ø–æ—Å–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Ç–µ–±–µ –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω " \
               f"–ø–æ–¥–∞—Ä–æ–∫</b>. \n\n" \
               f"–ê –ø–æ–∫–∞ –ª–æ–≤–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç –∏ –∑–Ω–∞–∫–æ–º—å—Å—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏. –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ —á–∞—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è –∏ " \
               f"–Ω–∞–ø–∏—à–∏ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Å–µ–±–µ (–∫–∞–∫ –∑–æ–≤—É—Ç, —Å –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ —á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è). " \
               f"<b>–≠—Ç–æ –≤–∞–∂–Ω–æ </b> –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏. –ê —Ç–∞–∫ –∂–µ –Ω–∞–ø–∏—à–∏ —Å –∫–∞–∫–æ–≥–æ –¥–Ω—è —Ç—ã " \
               f"–Ω–∞—á–Ω—ë—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç—á—ë—Ç—ã –∏ –≤–Ω–µ–¥—Ä—è—Ç—å –ø—Ä–∏–≤—ã—á–∫—É. –ü—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤ —á–∞—Ç–µ –º–æ–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –±–æ–ª–µ–µ 2—Ö –¥–Ω–µ–π. " \
               f"{get_chat_link()} –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è ‚ù§Ô∏è"
        await callback.message.answer(text)
        await callback.message.answer("–¢–æ, —á—Ç–æ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É –µ—â—ë –ù–ï –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–≤–æ–π —á–µ–ª–ª–µ–Ω–¥–∂ –Ω–∞—á–∞–ª—Å—è. "
                                      "–ß—Ç–æ–±—ã –±–æ—Ç –Ω–∞—á–∞–ª —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–µ–±—è - –Ω–∞–¥–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \"–ù–∞—á–∞—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂\"\n\n"
                                      "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –µ—ë –Ω–∞–∂–º—ë—à—å - –ø–æ–ª—É—á–∏—à—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫–∞–∫ –≤—ã—Å—ã–ª–∞—Ç—å –æ—Ç—á—ë—Ç—ã –≤ —á–∞—Ç. "
                                      "–ê —Ç–∞–∫ –∂–µ —É–∂–µ —É—Ç—Ä–æ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è –ë–æ—Ç –Ω–∞—á–Ω—ë—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–≤–æ–∏ –ø–æ–¥—ä—ë–º—ã üëç.\n\n"
                                      "–ï—Å–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∑–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º, —Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è 1-2 –¥–Ω—è –∏ "
                                      "–ø–æ—Ç–æ–º –Ω–∞—á–∞—Ç—å. –ê –ø–æ–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ –≤ —á–∞—Ç –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!",
                                      reply_markup=start_marathon_markup)
        await state.finish()
    else:
        await callback.message.answer(
            "–£–∫–∞–∂–∏ —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–º–µ–Ω–∏ —Å –ú–æ—Å–∫–≤–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n"
            "- –µ—Å–ª–∏ —Ç–≤–æ–µ –≤—Ä–µ–º—è <b>–æ–ø–µ—Ä–µ–∂–∞–µ—Ç</b> –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –Ω–∞ <b>2 —á–∞—Å–∞</b>, —É–∫–∞–∂–∏ <b>2</b>\n\n"
            "- –µ—Å–ª–∏ —Ç–≤–æ–µ –≤—Ä–µ–º—è <b>–æ—Ç—Å—Ç–∞–µ—Ç</b> –æ—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –Ω–∞ <b>3 —á–∞—Å–∞</b>, —É–∫–∞–∂–∏ <b>-3</b>\n\n"
        )
        await RegisterMarathonMember.get_msk_timedelta.set()


# https://t.me/joinchat/Bb21nyN9t9wzYzFi
@dp.message_handler(state=RegisterMarathonMember.get_msk_timedelta)
async def get_msk_timedelta(message: types.Message, state: FSMContext):
    msk_timedelta = message.text
    if correct_msk_timedelta(msk_timedelta):
        await state.update_data(msk_timedelta=msk_timedelta)
        await finish_registration(message.from_user.id, message.from_user.username, state)
        text = f"–í –±–ª–∏–∂–∞–π—à–∏–µ —Å—É—Ç–∫–∏ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω—Ç–æ—Ä —á–µ–ª–ª–µ–Ω–¥–∂–∞ –∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –∫–∞–∫ —É –Ω–∞—Å –≤—Å—ë —É—Å—Ç—Ä–æ–µ–Ω–æ. " \
               f"<b>–ö–æ—É—á-–±–µ—Å–µ–¥–∞ (10 –º–∏–Ω—É—Ç) —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏–µ–º –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º</b>, —á—Ç–æ–±—ã –ø—Ä–∏–≤—ã—á–∫–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–ª–∞—Å—å " \
               f"–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –∏ —É—Å–ø–µ—à–Ω–æ. <b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–Ω–∏–º–∏ —Ç—Ä—É–±–∫—É - –ø–æ—Å–ª–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Ç–µ–±–µ –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω " \
               f"–ø–æ–¥–∞—Ä–æ–∫</b>. \n\n" \
               f"–ê –ø–æ–∫–∞ –ª–æ–≤–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç –∏ –∑–Ω–∞–∫–æ–º—å—Å—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏. –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ —á–∞—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è –∏ " \
               f"–Ω–∞–ø–∏—à–∏ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ —Å–µ–±–µ (–∫–∞–∫ –∑–æ–≤—É—Ç, —Å –∫–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –∏ —á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è). " \
               f"<b>–≠—Ç–æ –≤–∞–∂–Ω–æ </b> –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏. –ê —Ç–∞–∫ –∂–µ –Ω–∞–ø–∏—à–∏ —Å –∫–∞–∫–æ–≥–æ –¥–Ω—è —Ç—ã " \
               f"–Ω–∞—á–Ω—ë—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç—á—ë—Ç—ã –∏ –≤–Ω–µ–¥—Ä—è—Ç—å –ø—Ä–∏–≤—ã—á–∫—É. –ü—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤ —á–∞—Ç–µ –º–æ–∂–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–µ –±–æ–ª–µ–µ 2—Ö –¥–Ω–µ–π. " \
               f"{get_chat_link()} –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è ‚ù§Ô∏è"
        await message.answer(text)
        await message.answer("–¢–æ, —á—Ç–æ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É –µ—â—ë –ù–ï –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Ç–≤–æ–π —á–µ–ª–ª–µ–Ω–¥–∂ –Ω–∞—á–∞–ª—Å—è. "
                             "–ß—Ç–æ–±—ã –±–æ—Ç –Ω–∞—á–∞–ª —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–µ–±—è - –Ω–∞–¥–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \"–ù–∞—á–∞—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂\"\n\n"
                             "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –µ—ë –Ω–∞–∂–º—ë—à—å - –ø–æ–ª—É—á–∏—à—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫–∞–∫ –≤—ã—Å—ã–ª–∞—Ç—å –æ—Ç—á—ë—Ç—ã –≤ —á–∞—Ç. "
                             "–ê —Ç–∞–∫ –∂–µ —É–∂–µ —É—Ç—Ä–æ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è –ë–æ—Ç –Ω–∞—á–Ω—ë—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å —Ç–≤–æ–∏ –ø–æ–¥—ä—ë–º—ã üëç.\n\n"
                             "–ï—Å–ª–∏ –Ω–µ –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∑–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º, —Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è 1-2 –¥–Ω—è –∏ "
                             "–ø–æ—Ç–æ–º –Ω–∞—á–∞—Ç—å. –ê –ø–æ–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ –≤ —á–∞—Ç –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!",
                             reply_markup=start_marathon_markup
                             )
        await state.finish()
    else:
        await message.answer("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–∞–∑–Ω–∏—Ü—ã –≤–æ –≤—Ä–µ–º–µ–Ω–∏")


@dp.message_handler(state=RegisterMarathonMember.get_phone)
async def get_phone_error(message: types.Message, ):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")


@dp.message_handler(state=[
    RegisterMarathonMember.get_wakeup_time,
    RegisterMarathonMember.is_msk,
]
)
async def error(message: types.Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–µ–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞")
